import * as React from 'react';
import styled from 'styled-components';
import * as Animated from 'animated/lib/targets/react-dom';
import * as Dropzone from 'react-dropzone';

import Spring from '../components/Test';


const PageWrapper = styled.div``;

const BlueGradient = styled.div`
  background-image: linear-gradient(-180deg, #5483F7 19%, #2B5BDB 100%);
  height: 100vh;
  position: relative;
`;

const FullViewportView = styled.div`
  height: 100vh;
  position: relative;
  width: 100vw;
  background-image: linear-gradient(-180deg, #5483F7 19%, #2B5BDB 100%);
  padding-top: 89px;
`;

// gray gradient   background-image: linear-gradient(-180deg, #FEFEFF 0%, #FCFCFD 51%, #F3F7FF 100%);


const CallToAction = styled.header`
  margin: 46px auto 46px auto;
  color: #74809D;
  width: 376px;
  font-size: 36px;
  text-align: center;
`;

const DropZoneStyledArea: any = styled.div`
  height: 452px;
  border: 2px dashed ${(props: any) => props.isActive ? '#74809D' : '#B9B5B5'};
  border-radius: 16px;
  margin: 0 72px 30px 72px;
  padding: 54px 0;
`;

const InstructionMain = styled.div`
  font-size: 36px;
  font-weight: 300;
  color: #4F4040;
  letter-spacing: 0;
  text-align: center;
`;

const Link = styled.a`
  text-decoration: underline;
`;

const InstructionSecondary = styled.div`
  font-size: 24px;
  font-weight: 300;
  color: #4F4040;
  letter-spacing: 0;
  text-align: center;
`;

const PhotosSvg = styled((props: any) => (


<svg className={props.className}  width="99px" height="85px" viewBox="139 156 99 85" version="1.1" xmlns="http://www.w3.org/2000/svg">

    <defs></defs>
    <g id="Group-4" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate(139.405941, 156.806647)">
        <g id="pictures" fill-rule="nonzero">
            <g id="Layer_1">
                <path d="M3.20937058,19.669156 L77.1252475,0.23429779 C79.4230728,-0.368373505 81.8741513,0.987493461 82.4869696,3.247463 L97.1170085,56.6553095 C97.7298267,58.9150878 96.3511315,61.2504152 93.9764851,61.8528952 L20.0608027,81.2877534 C17.7629774,81.8904247 15.3118989,80.5345578 14.6990806,78.2745882 L0.145668317,24.8667417 C-0.467149929,22.6069634 0.911545262,20.2718273 3.20937058,19.669156 Z" id="Shape" fill="#E4E7E7"></path>
                <path d="M9.41379066,23.9628304 L74.0613508,7.01401515 C75.8229844,6.56205949 77.6614392,7.61668644 78.1976308,9.34915124 L90.2999646,53.5669778 C90.7595297,55.2994426 89.6871464,57.1074564 87.9255127,57.5594121 L23.2777581,74.5082273 C21.5161245,74.960183 19.6776697,73.905556 19.1414781,72.1730912 L7.03933876,27.9552647 C6.5031471,26.2226087 7.57553041,24.414786 9.41379066,23.9628304 Z" id="Shape" fill="#A3B4E0"></path>
                <path d="M16.613773,18.9157691 L93.5933522,18.9157691 C96.0444307,18.9157691 97.9593175,20.8743074 97.9593175,23.2094434 L97.9593175,79.3290239 C97.9593175,81.7395178 95.9678041,83.6226983 93.5933522,83.6226983 L16.613773,83.6226983 C14.1626945,83.6226983 12.2478076,81.66416 12.2478076,79.3290239 L12.2478076,23.2096347 C12.2478076,20.8743074 14.2393211,18.9157691 16.613773,18.9157691 Z" id="Shape" fill="#F3F3F3"></path>
                <path d="M21.7458098,24.9420995 L88.6147631,24.9420995 C90.4530233,24.9420995 91.9849717,26.4486821 91.9849717,28.2565047 L91.9849717,74.3575117 C91.9849717,76.1653343 90.4530233,77.6719169 88.6147631,77.6719169 L21.7458098,77.6719169 C19.9075495,77.6719169 18.3756011,76.1653343 18.3756011,74.3575117 L18.3756011,28.2565047 C18.3756011,26.4486821 19.8309229,24.9420995 21.7458098,24.9420995 Z" id="Shape" fill="#B6CAFD"></path>
                <path d="M18.3756011,28.2565047 L18.3756011,44.3767665 C19.1414781,44.4521243 19.9075495,44.5274821 20.6734264,44.5274821 C30.4011139,44.5274821 38.2907355,36.7686869 38.2907355,27.2018778 C38.2907355,26.4486821 38.2141089,25.6952952 38.1374823,24.9420995 L21.7458098,24.9420995 C19.8309229,24.9420995 18.3756011,26.4486821 18.3756011,28.2565047 Z" id="Shape" fill="#EFC75E"></path>
                <path d="M23.967203,61.8530865 C22.0523161,61.8530865 20.1374293,62.0038021 18.3756011,62.2296843 L18.3756011,74.3575117 C18.3756011,76.1653343 19.9075495,77.6719169 21.7458098,77.6719169 L47.252546,77.6719169 C47.4057992,76.9938878 47.4824257,76.3914078 47.4824257,75.7133787 C47.4822313,68.0299413 36.9886669,61.8530865 23.967203,61.8530865 Z" id="Shape" fill="#8BBB04"></path>
                <path d="M77.3549328,55.0733691 C56.3674151,55.0733691 39.2862977,65.1673004 39.0566124,77.6719169 L88.5381365,77.6719169 C90.3763967,77.6719169 91.9083451,76.1653343 91.9083451,74.3575117 L91.9083451,56.8060252 C87.3891266,55.7513982 82.4869696,55.0733691 77.3549328,55.0733691 Z" id="Shape" fill="#97CC04"></path>
            </g>
        </g>
    </g>
</svg>
)) `
  display: block;
  margin: 0 auto 38px auto;
`;

const ResizingContainer = styled.div`
position: relative;
`

const SpringOverlay = styled((props: any) => (
  <Spring
    className={props.className}
    pressed={props.pressed}
  >
    {props.children}
  </Spring>
)) `
  margin: 0 auto;
  min-width: 500px;
  box-shadow: 0 11px 74px 28px rgba(0,0,0,0.15);
  background: #FFFFFF;
  z-index: 1;
  position: absolute;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%,-50%);
`;

const Container = styled.div`
  height: 100%;
  width: 100%;
  position: relative;
`

// success subdued green: #7AB88B

const CloudSvg = styled((props: any) => (
  <svg className={props.className} width="154px" height="131px" viewBox="98 0 154 131" version="1.1" xmlns="http://www.w3.org/2000/svg">
    <defs></defs>
    <g id="cloud-computing-blue" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd" transform="translate(98.000000, 0.000000)">
      <g id="Capa_1" fillRule="nonzero" fill="#74809D">
        <g id="Group">
          <path d="M130.835833,41.6981154 C129.4832,18.6788846 110.4411,0.278846154 87.4822667,0.278846154 C73.5452667,0.278846154 60.0497333,7.08998077 51.6875333,18.2031538 C51.4976,18.1034038 51.2948333,18.0369038 51.1023333,17.9422692 C50.5941333,17.6967308 50.0782333,17.4614231 49.5495,17.25425 C49.2543333,17.1391538 48.9591667,17.0342885 48.6614333,16.9294231 C48.1429667,16.7478269 47.6193667,16.58925 47.0829333,16.4434615 C46.7852,16.3641731 46.4900333,16.2823269 46.1871667,16.2132692 C45.6122333,16.0828269 45.0270333,15.9830769 44.4341333,15.8961154 C44.1723333,15.85775 43.9156667,15.8065962 43.6513,15.7759038 C42.8043,15.6838269 41.9419,15.625 41.0666667,15.625 C28.3308667,15.625 17.9666667,25.9504038 17.9666667,38.6442308 C17.9666667,38.9741731 17.9846333,39.2964423 18.0077333,39.6187115 C7.33296667,45.417 0,57.5685962 0,69.7304231 C0,87.8465577 14.7891333,102.586538 32.9688333,102.586538 L46.2,102.586538 C47.6168,102.586538 48.7666667,101.44325 48.7666667,100.028846 C48.7666667,98.6144423 47.6168,97.4711538 46.2,97.4711538 L32.9688333,97.4711538 C17.6201667,97.4711538 5.13333333,85.0279808 5.13333333,69.7304231 C5.13333333,59.1057692 12.0761667,48.077 21.6421333,43.5064038 L23.1,42.8132692 L23.1,41.2019231 C23.1,40.8873269 23.1205333,40.5650577 23.1385,40.2427885 L23.1616,39.7951923 L23.1308,39.3143462 C23.1179667,39.0918269 23.1,38.8693077 23.1,38.6442308 C23.1,28.7740962 31.1593333,20.7403846 41.0666667,20.7403846 C41.8597667,20.7403846 42.6426,20.8094423 43.4203,20.91175 C43.6205,20.9373269 43.8181333,20.9705769 44.0157667,21.0038269 C44.7036333,21.1163654 45.3812333,21.2647115 46.0485667,21.4565385 C46.1358333,21.4821154 46.2256667,21.4974615 46.3103667,21.5230385 C47.0444333,21.7455577 47.7605333,22.0294615 48.4612333,22.3466154 C48.6383333,22.4259038 48.8128667,22.5128654 48.9874,22.5998269 C49.6085333,22.9041923 50.2168333,23.2418077 50.8020333,23.6203462 C55.748,26.8149038 59.0333333,32.34975 59.0333333,38.6442308 C59.0333333,40.0586346 60.1832,41.2019231 61.6,41.2019231 C63.0168,41.2019231 64.1666667,40.0586346 64.1666667,38.6442308 C64.1666667,31.6003462 60.9686,25.2956346 55.9533333,21.0703269 C63.3094,11.4789808 75.4292,5.39423077 87.4822667,5.39423077 C107.358533,5.39423077 123.872467,21.0856731 125.592133,40.9129038 C122.969,40.72875 119.039433,40.6341154 115.112433,41.2326154 C113.711033,41.4449038 112.748533,42.7493269 112.961567,44.1458269 C113.154067,45.4118846 114.247467,46.3198654 115.494867,46.3198654 C115.6232,46.3198654 115.7541,46.3096346 115.885,46.2891731 C121.593267,45.4297885 127.545367,46.2354615 127.907267,46.2840577 C139.857667,48.5476154 148.866667,59.5175577 148.866667,71.8226154 C148.866667,85.9640962 137.319233,97.4711538 123.128133,97.4711538 L112.933333,97.4711538 C111.516533,97.4711538 110.366667,98.6144423 110.366667,100.028846 C110.366667,101.44325 111.516533,102.586538 112.933333,102.586538 L123.128133,102.586538 C140.150267,102.586538 154,88.7852308 154,71.8226154 C154,57.7834423 144.177367,45.1919231 130.835833,41.6981154 Z" id="Shape"></path>
          <path d="M81.3838667,67.5308077 C81.1477333,67.2929423 80.8628333,67.1062308 80.5471333,66.9757885 C79.9208667,66.7174615 79.2124667,66.7174615 78.5862,66.9757885 C78.2705,67.1062308 77.9881667,67.2929423 77.7494667,67.5308077 L57.2187,87.9897885 C56.2151333,88.9898462 56.2151333,90.6063077 57.2187,91.6063654 C57.7192,92.1051154 58.3762667,92.3557692 59.0333333,92.3557692 C59.6904,92.3557692 60.3474667,92.1051154 60.8479667,91.6063654 L77,75.5108077 L77,128.163462 C77,129.577865 78.1498667,130.721154 79.5666667,130.721154 C80.9834667,130.721154 82.1333333,129.577865 82.1333333,128.163462 L82.1333333,75.5108077 L98.2853667,91.6063654 C98.7858667,92.1051154 99.4429333,92.3557692 100.1,92.3557692 C100.757067,92.3557692 101.414133,92.1051154 101.914633,91.6063654 C102.9182,90.6063077 102.9182,88.9898462 101.914633,87.9897885 L81.3838667,67.5308077 Z" id="Shape"></path>
        </g>
      </g>
    </g>
    <g opacity={props.isActive ? 0 : 1} style={{ transition: 'opacity .25s ease-in-out' }} id="cloud-computing" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd" transform="translate(98.000000, 0.000000)">
      <g id="Capa_1" fillRule="nonzero" fill="#B7BAC1">
        <g id="Group">
          <path d="M130.835833,41.6981154 C129.4832,18.6788846 110.4411,0.278846154 87.4822667,0.278846154 C73.5452667,0.278846154 60.0497333,7.08998077 51.6875333,18.2031538 C51.4976,18.1034038 51.2948333,18.0369038 51.1023333,17.9422692 C50.5941333,17.6967308 50.0782333,17.4614231 49.5495,17.25425 C49.2543333,17.1391538 48.9591667,17.0342885 48.6614333,16.9294231 C48.1429667,16.7478269 47.6193667,16.58925 47.0829333,16.4434615 C46.7852,16.3641731 46.4900333,16.2823269 46.1871667,16.2132692 C45.6122333,16.0828269 45.0270333,15.9830769 44.4341333,15.8961154 C44.1723333,15.85775 43.9156667,15.8065962 43.6513,15.7759038 C42.8043,15.6838269 41.9419,15.625 41.0666667,15.625 C28.3308667,15.625 17.9666667,25.9504038 17.9666667,38.6442308 C17.9666667,38.9741731 17.9846333,39.2964423 18.0077333,39.6187115 C7.33296667,45.417 0,57.5685962 0,69.7304231 C0,87.8465577 14.7891333,102.586538 32.9688333,102.586538 L46.2,102.586538 C47.6168,102.586538 48.7666667,101.44325 48.7666667,100.028846 C48.7666667,98.6144423 47.6168,97.4711538 46.2,97.4711538 L32.9688333,97.4711538 C17.6201667,97.4711538 5.13333333,85.0279808 5.13333333,69.7304231 C5.13333333,59.1057692 12.0761667,48.077 21.6421333,43.5064038 L23.1,42.8132692 L23.1,41.2019231 C23.1,40.8873269 23.1205333,40.5650577 23.1385,40.2427885 L23.1616,39.7951923 L23.1308,39.3143462 C23.1179667,39.0918269 23.1,38.8693077 23.1,38.6442308 C23.1,28.7740962 31.1593333,20.7403846 41.0666667,20.7403846 C41.8597667,20.7403846 42.6426,20.8094423 43.4203,20.91175 C43.6205,20.9373269 43.8181333,20.9705769 44.0157667,21.0038269 C44.7036333,21.1163654 45.3812333,21.2647115 46.0485667,21.4565385 C46.1358333,21.4821154 46.2256667,21.4974615 46.3103667,21.5230385 C47.0444333,21.7455577 47.7605333,22.0294615 48.4612333,22.3466154 C48.6383333,22.4259038 48.8128667,22.5128654 48.9874,22.5998269 C49.6085333,22.9041923 50.2168333,23.2418077 50.8020333,23.6203462 C55.748,26.8149038 59.0333333,32.34975 59.0333333,38.6442308 C59.0333333,40.0586346 60.1832,41.2019231 61.6,41.2019231 C63.0168,41.2019231 64.1666667,40.0586346 64.1666667,38.6442308 C64.1666667,31.6003462 60.9686,25.2956346 55.9533333,21.0703269 C63.3094,11.4789808 75.4292,5.39423077 87.4822667,5.39423077 C107.358533,5.39423077 123.872467,21.0856731 125.592133,40.9129038 C122.969,40.72875 119.039433,40.6341154 115.112433,41.2326154 C113.711033,41.4449038 112.748533,42.7493269 112.961567,44.1458269 C113.154067,45.4118846 114.247467,46.3198654 115.494867,46.3198654 C115.6232,46.3198654 115.7541,46.3096346 115.885,46.2891731 C121.593267,45.4297885 127.545367,46.2354615 127.907267,46.2840577 C139.857667,48.5476154 148.866667,59.5175577 148.866667,71.8226154 C148.866667,85.9640962 137.319233,97.4711538 123.128133,97.4711538 L112.933333,97.4711538 C111.516533,97.4711538 110.366667,98.6144423 110.366667,100.028846 C110.366667,101.44325 111.516533,102.586538 112.933333,102.586538 L123.128133,102.586538 C140.150267,102.586538 154,88.7852308 154,71.8226154 C154,57.7834423 144.177367,45.1919231 130.835833,41.6981154 Z" id="Shape"></path>
          <path d="M81.3838667,67.5308077 C81.1477333,67.2929423 80.8628333,67.1062308 80.5471333,66.9757885 C79.9208667,66.7174615 79.2124667,66.7174615 78.5862,66.9757885 C78.2705,67.1062308 77.9881667,67.2929423 77.7494667,67.5308077 L57.2187,87.9897885 C56.2151333,88.9898462 56.2151333,90.6063077 57.2187,91.6063654 C57.7192,92.1051154 58.3762667,92.3557692 59.0333333,92.3557692 C59.6904,92.3557692 60.3474667,92.1051154 60.8479667,91.6063654 L77,75.5108077 L77,128.163462 C77,129.577865 78.1498667,130.721154 79.5666667,130.721154 C80.9834667,130.721154 82.1333333,129.577865 82.1333333,128.163462 L82.1333333,75.5108077 L98.2853667,91.6063654 C98.7858667,92.1051154 99.4429333,92.3557692 100.1,92.3557692 C100.757067,92.3557692 101.414133,92.1051154 101.914633,91.6063654 C102.9182,90.6063077 102.9182,88.9898462 101.914633,87.9897885 L81.3838667,67.5308077 Z" id="Shape"></path>
        </g>
      </g>
    </g>
  </svg>
)) `
  display: block;
  margin: 0 auto 15px auto;
`;

class Home extends React.Component<any, any> {
  dropzone: any;
  constructor(props) {
    super(props);

    this.handleDragEnter = this.handleDragEnter.bind(this);
    this.handleDragLeave = this.handleDragLeave.bind(this);
    this.handleDrop = this.handleDrop.bind(this);
    this.openFileDialog = this.openFileDialog.bind(this);
    this.state = {
      isDragging: false,
    }
  }

  handleDragEnter() {
    this.setState({ isDragging: true });
    console.log('drag enter');
  }

  handleDragLeave() {
    this.setState({ isDragging: false });
  }

  handleDrop() {
    this.setState({ isDragging: false });
    console.log('drop');
  }

  openFileDialog() {
    this.dropzone.open();
  }

  render() {
    return (
      <Dropzone
      disableClick={true}
        className=" "
        onDragEnter={this.handleDragEnter}
        onDragLeave={this.handleDragLeave}
        onDrop={this.handleDrop}
        ref={(node) => { this.dropzone = node; }}
      >
        <FullViewportView >
          <Container>
          <SpringOverlay
            pressed={this.state.isDragging}
          >
            <CallToAction>
              Instantly create a shareable photo album
        </CallToAction>
            <DropZoneStyledArea isActive={this.state.isDragging}>
              <CloudSvg isActive={this.state.isDragging} />
              <PhotosSvg />
              <InstructionMain>
                Drag & drop
          </InstructionMain>
              <InstructionSecondary>
                or <Link onClick={this.openFileDialog} href="#">browse</Link> to upload your photos
          </InstructionSecondary>
            </DropZoneStyledArea>
          </SpringOverlay>
          </Container>
        </FullViewportView>
      </Dropzone>
    );

  }
}
export default Home;
